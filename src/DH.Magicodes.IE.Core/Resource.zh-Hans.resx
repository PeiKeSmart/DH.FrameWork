<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnUnknownErrorOccurredInTheTemplate" xml:space="preserve">
    <value>模板出现未知错误：</value>
  </data>
  <data name="AppendMethodMustBeBeforeCurrentMethod" xml:space="preserve">
    <value>调用当前方法之前，必须先调用Append方法！</value>
  </data>
  <data name="ASheetWithTheNameAlreadyExists" xml:space="preserve">
    <value>已经存在该名字的sheet</value>
  </data>
  <data name="ColumnHeadRepeat" xml:space="preserve">
    <value>列头重复！</value>
  </data>
  <data name="DataCannotBeEmpty" xml:space="preserve">
    <value>数据不能为空!</value>
  </data>
  <data name="DefineTheHeader" xml:space="preserve">
    <value>请定义表头！</value>
  </data>
  <data name="DoNotIgnoreAllTheHeader" xml:space="preserve">
    <value>请勿忽略全部表头！</value>
  </data>
  <data name="ErrorBuildingExpression" xml:space="preserve">
    <value>构建表达式时出错：</value>
  </data>
  <data name="ExcelimporterAttributeFeaturesIsNotAnnotated" xml:space="preserve">
    <value>Sheet属性没有标注ExcelImporterAttribute特性:</value>
  </data>
  <data name="ExistDuplicateData" xml:space="preserve">
    <value>存在数据重复，请检查！所在行：</value>
  </data>
  <data name="ExportingIsOnlySupportedXLSX" xml:space="preserve">
    <value>仅支持导出“.xlsx”，即不支持Excel97-2003!</value>
  </data>
  <data name="ExportResult" xml:space="preserve">
    <value>导出结果</value>
  </data>
  <data name="FileNameMustBeFilled" xml:space="preserve">
    <value>文件名必须填写！</value>
  </data>
  <data name="FileNameShouldNotBeEmpty" xml:space="preserve">
    <value>文件名不能为空！</value>
  </data>
  <data name="FilePathCannotBeEmpty" xml:space="preserve">
    <value>文件路径不能为空!</value>
  </data>
  <data name="Illegal" xml:space="preserve">
    <value>不合法！</value>
  </data>
  <data name="ImportData" xml:space="preserve">
    <value>导入数据</value>
  </data>
  <data name="ImportFileDoesNotExist" xml:space="preserve">
    <value>导入文件不存在!</value>
  </data>
  <data name="ImportTemplateNotFoundThisField" xml:space="preserve">
    <value>当前导入模板中未找到此字段！</value>
  </data>
  <data name="InvalidDataFormat" xml:space="preserve">
    <value>数据格式无效！</value>
  </data>
  <data name="MaximumNumberImportsCannotExceeded" xml:space="preserve">
    <value>最大允许导入条数不能超过</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="OnlySupportExportingCsv" xml:space="preserve">
    <value>仅支持导出“.csv”!</value>
  </data>
  <data name="PleaseFillInTheCorrectDateAndTimeFormat" xml:space="preserve">
    <value>无效，请填写正确的日期时间格式！</value>
  </data>
  <data name="PleaseFillInTheCorrectDecimal" xml:space="preserve">
    <value>无效，请填写正确的小数！</value>
  </data>
  <data name="PleaseFillInTheCorrectGUIDFormat" xml:space="preserve">
    <value>无效，请填写正确的Guid格式！</value>
  </data>
  <data name="PleaseFillInTheCorrectIntegerValue" xml:space="preserve">
    <value>无效，请填写正确的整数数值！</value>
  </data>
  <data name="PleaseFillInTheCorrectTimeSpanFormat" xml:space="preserve">
    <value>无效，请填写正确的时间跨度格式！</value>
  </data>
  <data name="TemplateFilePathCannotBeEmpty" xml:space="preserve">
    <value>模板文件路径不能为空!</value>
  </data>
  <data name="ThereAreNoTemplateDropDownOptions" xml:space="preserve">
    <value>不存在模板下拉选项中！</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="WrongData" xml:space="preserve">
    <value>错误数据</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
</root>